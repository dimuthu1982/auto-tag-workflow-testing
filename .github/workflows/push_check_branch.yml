env:
  BRANCH: release
name: Branch Check
run-name: Branch Check
on: [push]
jobs:
  extract-tag-in-branch:
     name: Find Tag In Branch
     runs-on: ubuntu-latest
     outputs:
       TAG_NAME: ${{steps.branch_tag.outputs.TAG_NAME}}
     steps: 
      - name: set Version
        id: set_branch
        run: | 
          echo BRANCH_NEW="release" >> $GITHUB_ENV
          echo "Branch New: ${BRANCH_NEW}"
      - name: Is Tag Version In Release Branch
        id: branch_tag
        if: ${{ startsWith(env.BRANCH, 'release/') }}
        run: |
            echo "Release Branch with version"
            echo "TAG_NAME=${BRANCH_NEW/'release/'}" >> $GITHUB_OUTPUT

  find-next-tag-by-branch:
    name: Find Next Tag By Branh
    if:  ${{ !needs.find-tag-in-branch.outputs.TAG_NAME }}
    runs-on: ubuntu-latest
    needs: extract-tag-in-branch
    outputs:
       NEXT_TAG_NAME: ${{steps.tag.outputs.NEXT_TAG_NAME}}
    steps:
      - name: Is branch wihout a version
        id: branch_release
        run: |
           BRANCH_NEW="release" 
           if [[ $BRANCH_NEW == release ]]; then 
            echo "Identifyed as RELEASE, minor"
            echo "RELEASE_TYPE=minor" >> $GITHUB_OUTPUT
           elif [[ $BRANCH_NEW == hotfix ]]; then 
            echo "Identifyed as HOTFIX, patch"
            echo "RELEASE_TYPE=patch" >> $GITHUB_OUTPUT
           else 
            exit 0;
           fi
      - name: Initiating Next Version Lookup @
        uses: actions/checkout@v4
      - name: Find Next Tag By Branch @
        id: version
        uses: reecetech/version-increment@2023.10.1
        with:
          use_api: true
          increment: ${{ steps.branch_release.outputs.RELEASE_TYPE }}
      - name: Set Next Tag
        id: tag
        run: echo "NEXT_TAG_NAME=${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT

      #- name: Printing Tag
      #  id: tag
      #  run: | 
      #     echo "Release TAG_NAME - ${TAG_NAME}"
      #     echo "Release Version RELEASE_TYPE - ${RELEASE_TYPE}"
      #     echo "TAG=${TAG_NAME}" >> $GITHUB_OUTPUT
      #     if [[ $TAG_NAME ]]; then
      #        echo "TAG=${TAG_NAME}" >> $GITHUB_OUTPUT
      #     fi

  create-tag:
    if: ${{ always() }}
    name: Tag Branch
    runs-on: ubuntu-latest
    needs: [extract-tag-in-branch, find-next-tag-by-branch]
    steps:
      - env:
          BRANCH_TAG: ${{needs.extract-tag-in-branch.outputs.TAG_NAME}}
          NEXT_TAG: ${{needs.find-next-tag-by-branch.outputs.NEXT_TAG_NAME}}
        run: |
          #echo "Tag In Branch - ${{needs.find-tag-in-branch.outputs.TAG_NAME}}" 
          #echo "Tag In Branch - ${{needs.find-tag-by-branch.outputs.NEXT_TAG_NAME}}" 
          #echo "Tag Next Release BRANCH_TAG ---> ${BRANCH_TAG}" 
           #echo "Tag Next Release env.BRANCH_TAG ---> ${env.BRANCH_TAG}" 
          #echo "Tag Next Release NEXT_RELEASE ---> ${NEXT_TAG}" 
          RELEASING_TAG=${BRANCH_TAG:NEXT_TAG}
          echo "Taging- $RELEASING_TAG "
           
